# 2. Добавьте в пакет, созданный на семинаре шахматный модуль. 
# Внутри него напишите код, решающий задачу о 8 ферзях.
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга. 
# Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга. 
# Программа получает на вход восемь пар чисел, каждое число от 1 до 8 - координаты 8 ферзей. 
# Если ферзи не бьют друг друга верните истину, а если бьют - ложь.
def queens(*args):
    """
    Расставляет 8 ферзей на шахматной доске и проверяет их корректное размещение.

    Аргументы:
    args (tuple): 8 Кортежей (0-7) с координатами ферзей в формате (x, y).

    Возвращает:
    bool: 
    False - хотя бы одна пара ферзей бьют друг друга (по горизонтали, вертикали или диагонали).
    True - никто из ферзей не бьют любого другого.
    """
    size = len(args)
    if 7 > size > 8:
        return False
    for i, queen in enumerate(args, 1): # Перебор 8 ферзей
        x, y = queen # Получение координат каждого ферзя
        # Расстановка ферзей
        if board[y][x] == 0: # Если текущая точка (y,x) имеет значение ноль
            board[y][x] = i # Ставим i-того ферзя (ферзь№1=10)
            # пробегаем всю ось x по значению y горизонтальным лучом i-го ферзя (ферзь№1=11)
            for h in range(size): # h - horizontal
                if board[y][h] == 0 or board[y][h] == i:
                    pass
                else: return False
            # пробегаем всю ось y по значению x вертикальным лучом i-го ферзя (ферзь№1=11)
            for v in range(size): # v - vertical
                if board[v][x] == 0 or board[v][x] == i: 
                    pass
                else: return False
            # пробегаем диагонали, проходящие через текущую точку
            for d in range(size): # d - diagonal
                # заполняем левую диагональ (верхняя левая точка, правая нижняя)

                # if 0 <= x + d < size and 0 <= y + d < size and board[y+d][x+d] == 90:
                #     board[y+d][x+d] = i*10+i
                # else: return False
                # if 0 <= x - d < size and 0 <= y + d < size and board[y+d][x-d] == 90:
                #     board[y+d][x-d] = i*10+i
                # else: return False
        else:
            return False

    return True

board =[[0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0]]


print(*board, sep='\n', end="\n\n")
# print(queens((0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)))
print(queens((4, 0), (1, 1), (3, 2), (6, 3), (2, 4), (7, 5), (5, 6), (0, 7)))
print(*board, sep='\n')
